// <auto-generated />
using Database.ProxyClasses.Enums;
using System.Diagnostics.CodeAnalysis;
using System.Diagnostics;
using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace Database.ProxyClasses
{
    /// <summary>
    /// Proxy class that represents the 'bcgov_documenturl' D365 table
    /// </summary>
    [EntityLogicalNameAttribute("bcgov_documenturl")]
    [GeneratedCode("XrmToolkit", "8.2.2.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    [DebuggerNonUserCode]
    [ExcludeFromCodeCoverage]
    public partial class Document : BaseProxyClass
    {
        public new const string LogicalName = "bcgov_documenturl";
        public const int ObjectTypeCode = 10024;
        public const string PrimaryIdAttribute = "bcgov_documenturlid";
        public const string PrimaryNameAttribute = "bcgov_filename";
        
        static Document()
        {
            BaseProxyClass.RegisterProxyType(typeof(Document), "bcgov_documenturl");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Document() : base(new Entity("bcgov_documenturl")) { }
        public Document(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Document>(); }

        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }

        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }

        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }

        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }

        private static Dictionary<string, eNumberOptions> _numberOptions;

        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }

        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }

        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }
        /// <summary>
        /// <para>Logical Name: bcgov_appointmentid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_appointmentid")]
        public EntityReference Appointment
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_appointmentid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_appointmentid", value, nameof(Appointment));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_attachmentnumber</para>
        /// <para>Minimum Value: -2147483648</para>
        /// <para>Maximum Value: 2147483647</para>
        /// </summary>
        [AttributeLogicalName("dfp_attachmentnumber")]
        public int? AttachmentNo
        {
            get
            {
                return this.GetPropertyValue<int?>("dfp_attachmentnumber");
            }
            set
            {
                this.SetPropertyValue("dfp_attachmentnumber", (int?)value, (int)-2147483648, (int)2147483647, nameof(AttachmentNo));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_batchid</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_batchid")]
        public string BatchId
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_batchid");
            }
            set
            {
                this.SetPropertyValue("dfp_batchid", value, 100, nameof(BatchId));
            }
        }

        /// <summary>
        /// Logical Name: dfp_bcmailstatus
        /// </summary>
        [AttributeLogicalName("dfp_bcmailstatus")]
        public Document_BCMailStatus? BCMailStatus
        {
            get
            {
                if (BCMailStatus_OptionSetValue != null) { return (Document_BCMailStatus)BCMailStatus_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.BCMailStatus_OptionSetValue = new OptionSetValue((int)value); }
                else this.BCMailStatus_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_bcmailstatus</para>
        /// </summary>
        [AttributeLogicalName("dfp_bcmailstatus")]
        public OptionSetValue BCMailStatus_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_bcmailstatus");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_bcmailstatus", value, nameof(BCMailStatus_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string BCMailStatus_Text(IOrganizationService service)
        {
            return this.BCMailStatus_OptionSetValue.GetOptionSetText(service, this, "dfp_bcmailstatus");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string BCMailStatus_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.BCMailStatus_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: bcgov_appointmentidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_appointmentidname")]
        public string bcgov_AppointmentIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_appointmentidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_caseidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_caseidname")]
        public string bcgov_CaseIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_caseidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_customeridtype</para>
        /// </summary>
        [AttributeLogicalName("bcgov_customeridtype")]
        public string bcgov_CustomerIdType
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_customeridtype");
            }
            set
            {
                this.SetPropertyValue<string>("bcgov_customeridtype", value, nameof(bcgov_CustomerIdType));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_customername</para>
        /// <para>Max Length: 4000 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_customername")]
        public string bcgov_CustomerName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_customername");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_customeryominame</para>
        /// <para>Max Length: 4000 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_customeryominame")]
        public string bcgov_CustomerYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_customeryominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_emailidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_emailidname")]
        public string bcgov_EmailIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_emailidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_faxidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_faxidname")]
        public string bcgov_FaxIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_faxidname");
            }
        }


        /// <summary>
        /// <para>Logical Name: bcgov_letteridname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_letteridname")]
        public string bcgov_LetterIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_letteridname");
            }
        }


        /// <summary>
        /// <para>Logical Name: bcgov_phonecallidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_phonecallidname")]
        public string bcgov_PhoneCallIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_phonecallidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_tag1idname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_tag1idname")]
        public string bcgov_Tag1IdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_tag1idname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_tag2idname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_tag2idname")]
        public string bcgov_Tag2IdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_tag2idname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_tag3idname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_tag3idname")]
        public string bcgov_Tag3IdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_tag3idname");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_taskidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_taskidname")]
        public string bcgov_TaskIdName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_taskidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_businessunitid</para>
        /// </summary>
        [AttributeLogicalName("dfp_businessunitid")]
        public EntityReference BusinessUnit
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_businessunitid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_businessunitid", value, nameof(BusinessUnit));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_caseid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_caseid")]
        public EntityReference Case
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_caseid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_caseid", value, nameof(Case));
            }
        }

        /// <summary>
        /// Logical Name: bcgov_fileclassification
        /// </summary>
        [AttributeLogicalName("bcgov_fileclassification")]
        public Document_FileClassification? Classification
        {
            get
            {
                if (Classification_OptionSetValue != null) { return (Document_FileClassification)Classification_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.Classification_OptionSetValue = new OptionSetValue((int)value); }
                else this.Classification_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: bcgov_fileclassification</para>
        /// </summary>
        [AttributeLogicalName("bcgov_fileclassification")]
        public OptionSetValue Classification_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("bcgov_fileclassification");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("bcgov_fileclassification", value, nameof(Classification_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string Classification_Text(IOrganizationService service)
        {
            return this.Classification_OptionSetValue.GetOptionSetText(service, this, "bcgov_fileclassification");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string Classification_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.Classification_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_clinicid</para>
        /// </summary>
        [AttributeLogicalName("dfp_clinicid")]
        public EntityReference ClinicId
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_clinicid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_clinicid", value, nameof(ClinicId));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_compliancedate</para>
        /// </summary>
        [AttributeLogicalName("dfp_compliancedate")]
        public DateTime? ComplianceDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_compliancedate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_compliancedate", value, nameof(ComplianceDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: createdby</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("createdby");
            }
        }

        /// <summary>
        /// <para>Logical Name: createdonbehalfby</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedBy_Delegate
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// <para>Logical Name: createdon</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("createdon");
            }
        }

        /// <summary>
        /// <para>Logical Name: createdbyname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("createdbyname")]
        public string CreatedByName
        {
            get
            {
                return this.GetPropertyValue<string>("createdbyname");
            }
        }

        /// <summary>
        /// <para>Logical Name: createdbyyominame</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("createdbyyominame")]
        public string CreatedByYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("createdbyyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: createdonbehalfbyname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfbyname")]
        public string CreatedOnBehalfByName
        {
            get
            {
                return this.GetPropertyValue<string>("createdonbehalfbyname");
            }
        }

        /// <summary>
        /// <para>Logical Name: createdonbehalfbyyominame</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfbyyominame")]
        public string CreatedOnBehalfByYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("createdonbehalfbyyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_customer</para>
        /// </summary>
        [AttributeLogicalName("bcgov_customer")]
        public EntityReference Customer
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_customer");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_customer", value, nameof(Customer));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_datedocumentreceived</para>
        /// </summary>
        [AttributeLogicalName("dfp_datedocumentreceived")]
        public DateTime? DateDocumentReceived
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_datedocumentreceived");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_datedocumentreceived", value, nameof(DateDocumentReceived));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_dayspastduedate</para>
        /// <para>Minimum Value: -2147483648</para>
        /// <para>Maximum Value: 2147483647</para>
        /// </summary>
        [AttributeLogicalName("dfp_dayspastduedate")]
        public int? DaysPastDueDate
        {
            get
            {
                return this.GetPropertyValue<int?>("dfp_dayspastduedate");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_description</para>
        /// <para>Max Length: 2000 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_description")]
        public string Description
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_description");
            }
            set
            {
                this.SetPropertyValue("dfp_description", value, 2000, nameof(Description));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_descriptionforteamleadreview</para>
        /// <para>Max Length: 4000 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_descriptionforteamleadreview")]
        public string DescriptionForTeamLeadReview
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_descriptionforteamleadreview");
            }
            set
            {
                this.SetPropertyValue("dfp_descriptionforteamleadreview", value, 4000, nameof(DescriptionForTeamLeadReview));
            }
        }


        /// <summary>
        /// <para>Logical Name: dfp_businessunitidname</para>
        /// <para>Max Length: 160 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_businessunitidname")]
        public string dfp_BusinessUnitIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_businessunitidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_clinicidname</para>
        /// <para>Max Length: 160 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_clinicidname")]
        public string dfp_ClinicIdName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_clinicidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_clinicidyominame</para>
        /// <para>Max Length: 160 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_clinicidyominame")]
        public string dfp_ClinicIdYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_clinicidyominame");
            }
        }



        /// <summary>
        /// <para>Logical Name: dfp_documentchannelidname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_documentchannelidname")]
        public string dfp_DocumentChannelIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_documentchannelidname");
            }
        }


        /// <summary>
        /// <para>Logical Name: dfp_documentsubtypename</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_documentsubtypename")]
        public string dfp_DocumentSubTypeName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_documentsubtypename");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_documenttypeidname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_documenttypeidname")]
        public string dfp_DocumentTypeIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_documenttypeidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_dpsactionidname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_dpsactionidname")]
        public string dfp_DPSActionIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_dpsactionidname");
            }
        }



        /// <summary>
        /// <para>Logical Name: dfp_driveridname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_driveridname")]
        public string dfp_DriverIdName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_driveridname");
            }
        }


        /// <summary>
        /// <para>Logical Name: dfp_intakeagentindpsidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_intakeagentindpsidname")]
        public string dfp_IntakeAgentinDPSIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_intakeagentindpsidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_intakeagentindpsidyominame</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_intakeagentindpsidyominame")]
        public string dfp_IntakeAgentinDPSIDYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_intakeagentindpsidyominame");
            }
        }



        /// <summary>
        /// <para>Logical Name: dfp_lettercreatedbyname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_lettercreatedbyname")]
        public string dfp_LetterCreatedByName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_lettercreatedbyname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_lettercreatedbyyominame</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_lettercreatedbyyominame")]
        public string dfp_LetterCreatedByYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_lettercreatedbyyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_loginidname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_loginidname")]
        public string dfp_LoginIdName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_loginidname");
            }
        }


        /// <summary>
        /// <para>Logical Name: dfp_medicalpractitioneridname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_medicalpractitioneridname")]
        public string dfp_MedicalPractitionerIdName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_medicalpractitioneridname");
            }
        }


        /// <summary>
        /// <para>Logical Name: dfp_parentdocumentidname</para>
        /// <para>Max Length: 255 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_parentdocumentidname")]
        public string dfp_ParentDocumentIdName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_parentdocumentidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_pdfdocumentidname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_pdfdocumentidname")]
        public string dfp_PDFDocumentIdName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_pdfdocumentidname");
            }
        }


        /// <summary>
        /// <para>Logical Name: dfp_privacyidname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_privacyidname")]
        public string dfp_PrivacyIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_privacyidname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_processorname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_processorname")]
        public string dfp_ProcessorName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_processorname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_processoryominame</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_processoryominame")]
        public string dfp_ProcessorYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_processoryominame");
            }
        }







        /// <summary>
        /// <para>Logical Name: dfp_useruploadedname</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_useruploadedname")]
        public string dfp_UserUploadedName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_useruploadedname");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_useruploadedyominame</para>
        /// <para>Max Length: 200 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_useruploadedyominame")]
        public string dfp_UserUploadedYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_useruploadedyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_xsstatuscodeidname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_xsstatuscodeidname")]
        public string dfp_XSStatusCodeIDName
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_xsstatuscodeidname");
            }
        }

        /// <summary>
        /// Logical Name: dfp_dmerstatus
        /// </summary>
        [AttributeLogicalName("dfp_dmerstatus")]
        public Document_DMERStatus? DMERStatus
        {
            get
            {
                if (DMERStatus_OptionSetValue != null) { return (Document_DMERStatus)DMERStatus_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.DMERStatus_OptionSetValue = new OptionSetValue((int)value); }
                else this.DMERStatus_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_dmerstatus</para>
        /// </summary>
        [AttributeLogicalName("dfp_dmerstatus")]
        public OptionSetValue DMERStatus_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_dmerstatus");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_dmerstatus", value, nameof(DMERStatus_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string DMERStatus_Text(IOrganizationService service)
        {
            return this.DMERStatus_OptionSetValue.GetOptionSetText(service, this, "dfp_dmerstatus");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string DMERStatus_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.DMERStatus_OptionSetValue.Value);
        }

        /// <summary>
        /// Logical Name: dfp_dmertype
        /// </summary>
        [AttributeLogicalName("dfp_dmertype")]
        public Document_DMERType? DMERType
        {
            get
            {
                if (DMERType_OptionSetValue != null) { return (Document_DMERType)DMERType_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.DMERType_OptionSetValue = new OptionSetValue((int)value); }
                else this.DMERType_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_dmertype</para>
        /// </summary>
        [AttributeLogicalName("dfp_dmertype")]
        public OptionSetValue DMERType_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_dmertype");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_dmertype", value, nameof(DMERType_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string DMERType_Text(IOrganizationService service)
        {
            return this.DMERType_OptionSetValue.GetOptionSetText(service, this, "dfp_dmertype");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string DMERType_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.DMERType_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_documentchannelid</para>
        /// </summary>
        [AttributeLogicalName("dfp_documentchannelid")]
        public EntityReference DocumentChannel
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_documentchannelid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_documentchannelid", value, nameof(DocumentChannel));
            }
        }

        /// <summary>
        /// Logical Name: dfp_documentorigin
        /// </summary>
        [AttributeLogicalName("dfp_documentorigin")]
        public Document_DocumentOrigin? DocumentOrigin
        {
            get
            {
                if (DocumentOrigin_OptionSetValue != null) { return (Document_DocumentOrigin)DocumentOrigin_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.DocumentOrigin_OptionSetValue = new OptionSetValue((int)value); }
                else this.DocumentOrigin_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_documentorigin</para>
        /// </summary>
        [AttributeLogicalName("dfp_documentorigin")]
        public OptionSetValue DocumentOrigin_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_documentorigin");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_documentorigin", value, nameof(DocumentOrigin_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string DocumentOrigin_Text(IOrganizationService service)
        {
            return this.DocumentOrigin_OptionSetValue.GetOptionSetText(service, this, "dfp_documentorigin");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string DocumentOrigin_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.DocumentOrigin_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_documentpages</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_documentpages")]
        public string DocumentPages
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_documentpages");
            }
            set
            {
                this.SetPropertyValue("dfp_documentpages", value, 100, nameof(DocumentPages));
            }
        }

        /// <summary>
        /// Logical Name: dfp_submittalstatus
        /// </summary>
        [AttributeLogicalName("dfp_submittalstatus")]
        public Document_SubmittalStatus? DocumentStatus
        {
            get
            {
                if (DocumentStatus_OptionSetValue != null) { return (Document_SubmittalStatus)DocumentStatus_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.DocumentStatus_OptionSetValue = new OptionSetValue((int)value); }
                else this.DocumentStatus_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_submittalstatus</para>
        /// </summary>
        [AttributeLogicalName("dfp_submittalstatus")]
        public OptionSetValue DocumentStatus_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_submittalstatus");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_submittalstatus", value, nameof(DocumentStatus_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string DocumentStatus_Text(IOrganizationService service)
        {
            return this.DocumentStatus_OptionSetValue.GetOptionSetText(service, this, "dfp_submittalstatus");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string DocumentStatus_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.DocumentStatus_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_documentsubtype</para>
        /// </summary>
        [AttributeLogicalName("dfp_documentsubtype")]
        public EntityReference DocumentSubType
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_documentsubtype");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_documentsubtype", value, nameof(DocumentSubType));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_documenttypeid</para>
        /// </summary>
        [AttributeLogicalName("dfp_documenttypeid")]
        public EntityReference DocumentType
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_documenttypeid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_documenttypeid", value, nameof(DocumentType));
            }
        }

        /// <summary>
        /// <para>Key Property (Uniqueidentifier)</para>
        /// <para>Logical Name: bcgov_documenturlid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_documenturlid")]
        public Guid DocumentUrlId
        {
            get
            {
                return base.Attributes.Contains("bcgov_documenturlid") ? this.GetAttributeValue<Guid>("bcgov_documenturlid") : base.Id;
            }
            set
            {
                base.Id = value;
                base.Attributes["bcgov_documenturlid"] = value;
                base.SetPropertyValue("bcgov_documenturlid", value, nameof(DocumentUrlId));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_dpsactionid</para>
        /// </summary>
        [AttributeLogicalName("dfp_dpsactionid")]
        public EntityReference DPSAction
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_dpsactionid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_dpsactionid", value, nameof(DPSAction));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_dpsclass</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_dpsclass")]
        public string DPSClass
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_dpsclass");
            }
            set
            {
                this.SetPropertyValue("dfp_dpsclass", value, 100, nameof(DPSClass));
            }
        }

        /// <summary>
        /// Logical Name: dfp_dpspriority
        /// </summary>
        [AttributeLogicalName("dfp_dpspriority")]
        public Document_DPSPriority? DPSPriority
        {
            get
            {
                if (DPSPriority_OptionSetValue != null) { return (Document_DPSPriority)DPSPriority_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.DPSPriority_OptionSetValue = new OptionSetValue((int)value); }
                else this.DPSPriority_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_dpspriority</para>
        /// </summary>
        [AttributeLogicalName("dfp_dpspriority")]
        public OptionSetValue DPSPriority_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_dpspriority");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_dpspriority", value, nameof(DPSPriority_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string DPSPriority_Text(IOrganizationService service)
        {
            return this.DPSPriority_OptionSetValue.GetOptionSetText(service, this, "dfp_dpspriority");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string DPSPriority_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.DPSPriority_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_dpsprocessingdate</para>
        /// </summary>
        [AttributeLogicalName("dfp_dpsprocessingdate")]
        public DateTime? DPSProcessingDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_dpsprocessingdate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_dpsprocessingdate", value, nameof(DPSProcessingDate));
            }
        }

        /// <summary>
        /// Logical Name: dfp_dpsstatus
        /// </summary>
        [AttributeLogicalName("dfp_dpsstatus")]
        public Document_DPSStatus? DPSStatus
        {
            get
            {
                if (DPSStatus_OptionSetValue != null) { return (Document_DPSStatus)DPSStatus_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.DPSStatus_OptionSetValue = new OptionSetValue((int)value); }
                else this.DPSStatus_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_dpsstatus</para>
        /// </summary>
        [AttributeLogicalName("dfp_dpsstatus")]
        public OptionSetValue DPSStatus_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_dpsstatus");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_dpsstatus", value, nameof(DPSStatus_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string DPSStatus_Text(IOrganizationService service)
        {
            return this.DPSStatus_OptionSetValue.GetOptionSetText(service, this, "dfp_dpsstatus");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string DPSStatus_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.DPSStatus_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_processdate</para>
        /// </summary>
        [AttributeLogicalName("dfp_processdate")]
        public DateTime? DPSedDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_processdate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_processdate", value, nameof(DPSedDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_driverid</para>
        /// </summary>
        [AttributeLogicalName("dfp_driverid")]
        public EntityReference Driver
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_driverid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_driverid", value, nameof(Driver));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_duedate</para>
        /// </summary>
        [AttributeLogicalName("dfp_duedate")]
        public DateTime? DueDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_duedate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_duedate", value, nameof(DueDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_emailid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_emailid")]
        public EntityReference Email
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_emailid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_emailid", value, nameof(Email));
            }
        }

        /// <summary>
        /// Logical Name: dfp_expectedorigin
        /// </summary>
        [AttributeLogicalName("dfp_expectedorigin")]
        public Document_ExpectedOrigin? ExpectedOrigin
        {
            get
            {
                if (ExpectedOrigin_OptionSetValue != null) { return (Document_ExpectedOrigin)ExpectedOrigin_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.ExpectedOrigin_OptionSetValue = new OptionSetValue((int)value); }
                else this.ExpectedOrigin_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_expectedorigin</para>
        /// </summary>
        [AttributeLogicalName("dfp_expectedorigin")]
        public OptionSetValue ExpectedOrigin_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_expectedorigin");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_expectedorigin", value, nameof(ExpectedOrigin_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string ExpectedOrigin_Text(IOrganizationService service)
        {
            return this.ExpectedOrigin_OptionSetValue.GetOptionSetText(service, this, "dfp_expectedorigin");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string ExpectedOrigin_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.ExpectedOrigin_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: bcgov_fileextension</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_fileextension")]
        public string Extension
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_fileextension");
            }
            set
            {
                this.SetPropertyValue("bcgov_fileextension", value, 100, nameof(Extension));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_extensiondays</para>
        /// <para>Minimum Value: -2147483648</para>
        /// <para>Maximum Value: 2147483647</para>
        /// </summary>
        [AttributeLogicalName("dfp_extensiondays")]
        public int? ExtensionDays
        {
            get
            {
                return this.GetPropertyValue<int?>("dfp_extensiondays");
            }
            set
            {
                this.SetPropertyValue("dfp_extensiondays", (int?)value, (int)-2147483648, (int)2147483647, nameof(ExtensionDays));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_extensionrequestedon</para>
        /// </summary>
        [AttributeLogicalName("dfp_extensionrequestedon")]
        public DateTime? ExtensionRequestedOn
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_extensionrequestedon");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_extensionrequestedon", value, nameof(ExtensionRequestedOn));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_faxid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_faxid")]
        public EntityReference Fax
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_faxid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_faxid", value, nameof(Fax));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_faxnumber</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_faxnumber")]
        public string FaxNumber
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_faxnumber");
            }
            set
            {
                this.SetPropertyValue("dfp_faxnumber", value, 100, nameof(FaxNumber));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_faxsender</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_faxsender")]
        public string FaxSender
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_faxsender");
            }
            set
            {
                this.SetPropertyValue("dfp_faxsender", value, 100, nameof(FaxSender));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_faxtimestamp</para>
        /// </summary>
        [AttributeLogicalName("dfp_faxtimestamp")]
        public DateTime? FaxTimeStamp
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_faxtimestamp");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_faxtimestamp", value, nameof(FaxTimeStamp));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_filename</para>
        /// <para>Max Length: 255 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_filename")]
        public string FileName
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_filename");
            }
            set
            {
                this.SetPropertyValue("bcgov_filename", value, 255, nameof(FileName));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_importid</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_importid")]
        public string ImportId
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_importid");
            }
            set
            {
                this.SetPropertyValue("dfp_importid", value, 100, nameof(ImportId));
            }
        }

        /// <summary>
        /// <para>Logical Name: importsequencenumber</para>
        /// <para>Minimum Value: -2147483648</para>
        /// <para>Maximum Value: 2147483647</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber
        {
            get
            {
                return this.GetPropertyValue<int?>("importsequencenumber");
            }
            set
            {
                this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, nameof(ImportSequenceNumber));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_intakeagentindpsid</para>
        /// </summary>
        [AttributeLogicalName("dfp_intakeagentindpsid")]
        public EntityReference IntakeAgentInDPS
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_intakeagentindpsid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_intakeagentindpsid", value, nameof(IntakeAgentInDPS));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_isoldestdocument</para>
        /// <para>True = Yes</para>
        /// <para>False = No</para>
        /// </summary>
        [AttributeLogicalName("dfp_isoldestdocument")]
        public bool? IsOldestDocument
        {
            get
            {
                return this.GetPropertyValue<bool?>("dfp_isoldestdocument");
            }
            set
            {
                this.SetPropertyValue<bool?>("dfp_isoldestdocument", value, nameof(IsOldestDocument));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_issuedate</para>
        /// </summary>
        [AttributeLogicalName("dfp_issuedate")]
        public DateTime? IssueDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_issuedate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_issuedate", value, nameof(IssueDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_letterid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_letterid")]
        public EntityReference Letter
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_letterid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_letterid", value, nameof(Letter));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_lettercreatedby</para>
        /// </summary>
        [AttributeLogicalName("dfp_lettercreatedby")]
        public EntityReference LetterCreatedBy
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_lettercreatedby");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_lettercreatedby", value, nameof(LetterCreatedBy));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_lettersentdate</para>
        /// </summary>
        [AttributeLogicalName("dfp_lettersentdate")]
        public DateTime? LetterSentDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_lettersentdate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_lettersentdate", value, nameof(LetterSentDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_loginid</para>
        /// </summary>
        [AttributeLogicalName("dfp_loginid")]
        public EntityReference Login
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_loginid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_loginid", value, nameof(Login));
            }
        }

        /// <summary>
        /// Logical Name: dfp_mdportalstatus
        /// </summary>
        [AttributeLogicalName("dfp_mdportalstatus")]
        public Document_MDPortalStatus? MDPortalStatus
        {
            get
            {
                if (MDPortalStatus_OptionSetValue != null) { return (Document_MDPortalStatus)MDPortalStatus_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.MDPortalStatus_OptionSetValue = new OptionSetValue((int)value); }
                else this.MDPortalStatus_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_mdportalstatus</para>
        /// </summary>
        [AttributeLogicalName("dfp_mdportalstatus")]
        public OptionSetValue MDPortalStatus_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_mdportalstatus");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_mdportalstatus", value, nameof(MDPortalStatus_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string MDPortalStatus_Text(IOrganizationService service)
        {
            return this.MDPortalStatus_OptionSetValue.GetOptionSetText(service, this, "dfp_mdportalstatus");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string MDPortalStatus_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.MDPortalStatus_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_medicalpractitionerid</para>
        /// </summary>
        [AttributeLogicalName("dfp_medicalpractitionerid")]
        public EntityReference MedicalPractitioner
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_medicalpractitionerid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_medicalpractitionerid", value, nameof(MedicalPractitioner));
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedby</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedonbehalfby</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedBy_Delegate
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedon</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("modifiedon");
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedbyname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyname")]
        public string ModifiedByName
        {
            get
            {
                return this.GetPropertyValue<string>("modifiedbyname");
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedbyyominame</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyyominame")]
        public string ModifiedByYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("modifiedbyyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedonbehalfbyname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfbyname")]
        public string ModifiedOnBehalfByName
        {
            get
            {
                return this.GetPropertyValue<string>("modifiedonbehalfbyname");
            }
        }

        /// <summary>
        /// <para>Logical Name: modifiedonbehalfbyyominame</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfbyyominame")]
        public string ModifiedOnBehalfByYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("modifiedonbehalfbyyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_oracleuserid</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_oracleuserid")]
        public string OracleUserId
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_oracleuserid");
            }
            set
            {
                this.SetPropertyValue("dfp_oracleuserid", value, 100, nameof(OracleUserId));
            }
        }

        /// <summary>
        /// Logical Name: bcgov_origincode
        /// </summary>
        [AttributeLogicalName("bcgov_origincode")]
        public Origin? Origin
        {
            get
            {
                if (Origin_OptionSetValue != null) { return (Origin)Origin_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.Origin_OptionSetValue = new OptionSetValue((int)value); }
                else this.Origin_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: bcgov_origincode</para>
        /// </summary>
        [AttributeLogicalName("bcgov_origincode")]
        public OptionSetValue Origin_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("bcgov_origincode");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("bcgov_origincode", value, nameof(Origin_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string Origin_Text(IOrganizationService service)
        {
            return this.Origin_OptionSetValue.GetOptionSetText(service, this, "bcgov_origincode");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string Origin_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.Origin_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_outgoingletter</para>
        /// <para>True = Yes</para>
        /// <para>False = No</para>
        /// </summary>
        [AttributeLogicalName("dfp_outgoingletter")]
        public bool? OutgoingLetter
        {
            get
            {
                return this.GetPropertyValue<bool?>("dfp_outgoingletter");
            }
            set
            {
                this.SetPropertyValue<bool?>("dfp_outgoingletter", value, nameof(OutgoingLetter));
            }
        }

        /// <summary>
        /// <para>Logical Name: ownerid</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference Owner
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("ownerid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("ownerid", value, nameof(Owner));
            }
        }

        /// <summary>
        /// <para>Logical Name: owneridname</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("owneridname")]
        public string OwnerIdName
        {
            get
            {
                return this.GetPropertyValue<string>("owneridname");
            }
        }

        /// <summary>
        /// <para>Logical Name: owneridtype</para>
        /// </summary>
        [AttributeLogicalName("owneridtype")]
        public string OwnerIdType
        {
            get
            {
                return this.GetPropertyValue<string>("owneridtype");
            }
            set
            {
                this.SetPropertyValue<string>("owneridtype", value, nameof(OwnerIdType));
            }
        }

        /// <summary>
        /// <para>Logical Name: owneridyominame</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("owneridyominame")]
        public string OwnerIdYomiName
        {
            get
            {
                return this.GetPropertyValue<string>("owneridyominame");
            }
        }

        /// <summary>
        /// <para>Logical Name: owningbusinessunit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// <para>Logical Name: owningteam</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// <para>Logical Name: owninguser</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_parentdocumentid</para>
        /// </summary>
        [AttributeLogicalName("dfp_parentdocumentid")]
        public EntityReference ParentDocument
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_parentdocumentid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_parentdocumentid", value, nameof(ParentDocument));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_pdfdocumentid</para>
        /// </summary>
        [AttributeLogicalName("dfp_pdfdocumentid")]
        public EntityReference PDFDocument
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_pdfdocumentid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_pdfdocumentid", value, nameof(PDFDocument));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_phonecallid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_phonecallid")]
        public EntityReference PhoneCall
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_phonecallid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_phonecallid", value, nameof(PhoneCall));
            }
        }

        /// <summary>
        /// Logical Name: dfp_priority
        /// </summary>
        [AttributeLogicalName("dfp_priority")]
        public Document_Priority? Priority
        {
            get
            {
                if (Priority_OptionSetValue != null) { return (Document_Priority)Priority_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.Priority_OptionSetValue = new OptionSetValue((int)value); }
                else this.Priority_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_priority</para>
        /// </summary>
        [AttributeLogicalName("dfp_priority")]
        public OptionSetValue Priority_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_priority");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_priority", value, nameof(Priority_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string Priority_Text(IOrganizationService service)
        {
            return this.Priority_OptionSetValue.GetOptionSetText(service, this, "dfp_priority");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string Priority_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.Priority_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_privacyid</para>
        /// </summary>
        [AttributeLogicalName("dfp_privacyid")]
        public EntityReference Privacy
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_privacyid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_privacyid", value, nameof(Privacy));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_processor</para>
        /// </summary>
        [AttributeLogicalName("dfp_processor")]
        public EntityReference Processor
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_processor");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_processor", value, nameof(Processor));
            }
        }

        /// <summary>
        /// Logical Name: dfp_queue
        /// </summary>
        [AttributeLogicalName("dfp_queue")]
        public Document_Queue? Queue
        {
            get
            {
                if (Queue_OptionSetValue != null) { return (Document_Queue)Queue_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.Queue_OptionSetValue = new OptionSetValue((int)value); }
                else this.Queue_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_queue</para>
        /// </summary>
        [AttributeLogicalName("dfp_queue")]
        public OptionSetValue Queue_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_queue");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_queue", value, nameof(Queue_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string Queue_Text(IOrganizationService service)
        {
            return this.Queue_OptionSetValue.GetOptionSetText(service, this, "dfp_queue");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string Queue_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.Queue_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: bcgov_receiveddate</para>
        /// </summary>
        [AttributeLogicalName("bcgov_receiveddate")]
        public DateTime? ReceivedDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("bcgov_receiveddate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("bcgov_receiveddate", value, nameof(ReceivedDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: overriddencreatedon</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? RecordCreatedOn
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("overriddencreatedon");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("overriddencreatedon", value, nameof(RecordCreatedOn));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_sendforteamleadreview</para>
        /// <para>True = Yes</para>
        /// <para>False = No</para>
        /// </summary>
        [AttributeLogicalName("dfp_sendforteamleadreview")]
        public bool? SendForTeamLeadReview
        {
            get
            {
                return this.GetPropertyValue<bool?>("dfp_sendforteamleadreview");
            }
            set
            {
                this.SetPropertyValue<bool?>("dfp_sendforteamleadreview", value, nameof(SendForTeamLeadReview));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_showonportals</para>
        /// <para>True = Yes</para>
        /// <para>False = No</para>
        /// </summary>
        [AttributeLogicalName("dfp_showonportals")]
        public bool? ShowOnPortals
        {
            get
            {
                return this.GetPropertyValue<bool?>("dfp_showonportals");
            }
            set
            {
                this.SetPropertyValue<bool?>("dfp_showonportals", value, nameof(ShowOnPortals));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_filesize</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_filesize")]
        public string Size
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_filesize");
            }
            set
            {
                this.SetPropertyValue("bcgov_filesize", value, 100, nameof(Size));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_solicited</para>
        /// <para>True = Yes</para>
        /// <para>False = No</para>
        /// </summary>
        [AttributeLogicalName("dfp_solicited")]
        public bool? Solicited
        {
            get
            {
                return this.GetPropertyValue<bool?>("dfp_solicited");
            }
            set
            {
                this.SetPropertyValue<bool?>("dfp_solicited", value, nameof(Solicited));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_solicitedreason</para>
        /// <para>Max Length: 2000 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_solicitedreason")]
        public string SolicitedReason
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_solicitedreason");
            }
            set
            {
                this.SetPropertyValue("dfp_solicitedreason", value, 2000, nameof(SolicitedReason));
            }
        }


        /// <summary>
        /// Logical Name: statecode
        /// </summary>
        [AttributeLogicalName("statecode")]
        public Document_Status? Status
        {
            get
            {
                if (Status_OptionSetValue != null) { return (Document_Status)Status_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
                else this.Status_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: statecode</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public OptionSetValue Status_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("statecode");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("statecode", value, nameof(Status_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string Status_Text(IOrganizationService service)
        {
            return this.Status_OptionSetValue.GetOptionSetText(service, this, "statecode");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string Status_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
        }

        /// <summary>
        /// Logical Name: statuscode
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public Document_StatusReason? StatusReason
        {
            get
            {
                if (StatusReason_OptionSetValue != null) { return (Document_StatusReason)StatusReason_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
                else this.StatusReason_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: statuscode</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public OptionSetValue StatusReason_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("statuscode");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("statuscode", value, nameof(StatusReason_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string StatusReason_Text(IOrganizationService service)
        {
            return this.StatusReason_OptionSetValue.GetOptionSetText(service, this, "statuscode");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string StatusReason_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
        }


        /// <summary>
        /// <para>Logical Name: bcgov_tag1id</para>
        /// </summary>
        [AttributeLogicalName("bcgov_tag1id")]
        public EntityReference Tag1
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_tag1id");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_tag1id", value, nameof(Tag1));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_tag2id</para>
        /// </summary>
        [AttributeLogicalName("bcgov_tag2id")]
        public EntityReference Tag2
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_tag2id");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_tag2id", value, nameof(Tag2));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_tag3id</para>
        /// </summary>
        [AttributeLogicalName("bcgov_tag3id")]
        public EntityReference Tag3
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_tag3id");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_tag3id", value, nameof(Tag3));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_taskid</para>
        /// </summary>
        [AttributeLogicalName("bcgov_taskid")]
        public EntityReference Task
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("bcgov_taskid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("bcgov_taskid", value, nameof(Task));
            }
        }

        /// <summary>
        /// <para>Logical Name: timezoneruleversionnumber</para>
        /// <para>Minimum Value: -1</para>
        /// <para>Maximum Value: 2147483647</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetPropertyValue<int?>("timezoneruleversionnumber");
            }
            set
            {
                this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, nameof(TimeZoneRuleVersionNumber));
            }
        }

        /// <summary>
        /// Logical Name: dfp_tldepartment
        /// </summary>
        [AttributeLogicalName("dfp_tldepartment")]
        public Document_TLDepartment? TLDepartment
        {
            get
            {
                if (TLDepartment_OptionSetValue != null) { return (Document_TLDepartment)TLDepartment_OptionSetValue.Value; }
                return null;
            }
            set
            {
                if (value != null) { this.TLDepartment_OptionSetValue = new OptionSetValue((int)value); }
                else this.TLDepartment_OptionSetValue = null;
            }
        }
        /// <summary>
        /// <para>Logical Name: dfp_tldepartment</para>
        /// </summary>
        [AttributeLogicalName("dfp_tldepartment")]
        public OptionSetValue TLDepartment_OptionSetValue
        {
            get
            {
                return this.GetPropertyValue<OptionSetValue>("dfp_tldepartment");
            }
            set
            {
                this.SetPropertyValue<OptionSetValue>("dfp_tldepartment", value, nameof(TLDepartment_OptionSetValue));
            }
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="service">D365 Organization Service</param>
        /// <returns></returns>
        public string TLDepartment_Text(IOrganizationService service)
        {
            return this.TLDepartment_OptionSetValue.GetOptionSetText(service, this, "dfp_tldepartment");
        }
        /// <summary>
        /// Retrieves the current value's text in the user's language.
        /// </summary>
        /// <param name="attributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
        /// <returns></returns>
        public string TLDepartment_Text(EnumAttributeMetadata attributeMetadata)
        {
            return attributeMetadata.GetOptionSetText(this.TLDepartment_OptionSetValue.Value);
        }

        /// <summary>
        /// <para>Logical Name: dfp_faxreceiveddate</para>
        /// </summary>
        [AttributeLogicalName("dfp_faxreceiveddate")]
        public DateTime? UploadDate
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_faxreceiveddate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_faxreceiveddate", value, nameof(UploadDate));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_uploadeddate</para>
        /// </summary>
        [AttributeLogicalName("dfp_uploadeddate")]
        public DateTime? UploadedDate_Old
        {
            get
            {
                return this.GetPropertyValue<DateTime?>("dfp_uploadeddate");
            }
            set
            {
                this.SetPropertyValue<DateTime?>("dfp_uploadeddate", value, nameof(UploadedDate_Old));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_isurgent</para>
        /// <para>True = Yes</para>
        /// <para>False = No</para>
        /// </summary>
        [AttributeLogicalName("dfp_isurgent")]
        public bool? UrgentRequest
        {
            get
            {
                return this.GetPropertyValue<bool?>("dfp_isurgent");
            }
            set
            {
                this.SetPropertyValue<bool?>("dfp_isurgent", value, nameof(UrgentRequest));
            }
        }

        /// <summary>
        /// <para>Logical Name: bcgov_url</para>
        /// <para>Max Length: 2083 characters</para>
        /// </summary>
        [AttributeLogicalName("bcgov_url")]
        public string Url
        {
            get
            {
                return this.GetPropertyValue<string>("bcgov_url");
            }
            set
            {
                this.SetPropertyValue("bcgov_url", value, 2083, nameof(Url));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_useruploaded</para>
        /// </summary>
        [AttributeLogicalName("dfp_useruploaded")]
        public EntityReference UserUploaded
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_useruploaded");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_useruploaded", value, nameof(UserUploaded));
            }
        }

        /// <summary>
        /// <para>Logical Name: utcconversiontimezonecode</para>
        /// <para>Minimum Value: -1</para>
        /// <para>Maximum Value: 2147483647</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetPropertyValue<int?>("utcconversiontimezonecode");
            }
            set
            {
                this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, nameof(UTCConversionTimeZoneCode));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_validationmethod</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_validationmethod")]
        public string ValidationMethod
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_validationmethod");
            }
            set
            {
                this.SetPropertyValue("dfp_validationmethod", value, 100, nameof(ValidationMethod));
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_validationprevious</para>
        /// <para>Max Length: 100 characters</para>
        /// </summary>
        [AttributeLogicalName("dfp_validationprevious")]
        public string ValidationPrevious
        {
            get
            {
                return this.GetPropertyValue<string>("dfp_validationprevious");
            }
            set
            {
                this.SetPropertyValue("dfp_validationprevious", value, 100, nameof(ValidationPrevious));
            }
        }

        /// <summary>
        /// <para>Logical Name: versionnumber</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public int? VersionNumber
        {
            get
            {
                return this.GetPropertyValue<int?>("versionnumber");
            }
        }

        /// <summary>
        /// <para>Logical Name: dfp_xsstatuscodeid</para>
        /// </summary>
        [AttributeLogicalName("dfp_xsstatuscodeid")]
        public EntityReference XSStatusCode
        {
            get
            {
                return this.GetPropertyValue<EntityReference>("dfp_xsstatuscodeid");
            }
            set
            {
                this.SetPropertyValue<EntityReference>("dfp_xsstatuscodeid", value, nameof(XSStatusCode));
            }
        }


        /// <summary>
        /// <para><b>Entity (Regarding)</b></para>
        /// <para>Schema Name: bcgov_documenturl_AsyncOperations</para>
        /// </summary>
        public List<Entity> GetSystemJobs_Regarding(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "asyncoperation", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Regarding)</b></para>
        /// <para>Schema Name: bcgov_documenturl_AsyncOperations</para>
        /// </summary>
        public List<Entity> GetSystemJobs_Regarding(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "asyncoperation", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Document (Parent Document)</b></para>
        /// <para>Schema Name: dfp_documenturl_bcgov_documenturl</para>
        /// </summary>
        public List<Document> GetDocuments_ParentDocument(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Document>(service, this.Id, "bcgov_documenturl", "dfp_parentdocumentid", columns); }

        /// <summary>
        /// <para><b>Document (Parent Document)</b></para>
        /// <para>Schema Name: dfp_documenturl_bcgov_documenturl</para>
        /// </summary>
        public List<Document> GetDocuments_ParentDocument(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Document>(service, this.Id, "bcgov_documenturl", "dfp_parentdocumentid", columns); }

        /// <summary>
        /// <para><b>Entity (Name)</b></para>
        /// <para>Schema Name: bcgov_documenturl_BulkDeleteFailures</para>
        /// </summary>
        public List<Entity> GetBulkDeleteFailures_Name(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "bulkdeletefailure", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Name)</b></para>
        /// <para>Schema Name: bcgov_documenturl_BulkDeleteFailures</para>
        /// </summary>
        public List<Entity> GetBulkDeleteFailures_Name(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "bulkdeletefailure", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Document)</b></para>
        /// <para>Schema Name: dfp_bcgov_documenturl_dfp_documentextension</para>
        /// </summary>
        public List<Entity> GetDocumentExtensions_Document(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "dfp_documentextension", "dfp_documentid", columns); }

        /// <summary>
        /// <para><b>Entity (Document)</b></para>
        /// <para>Schema Name: dfp_bcgov_documenturl_dfp_documentextension</para>
        /// </summary>
        public List<Entity> GetDocumentExtensions_Document(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "dfp_documentextension", "dfp_documentid", columns); }

        /// <summary>
        /// <para><b>Entity (Regarding Object Id)</b></para>
        /// <para>Schema Name: bcgov_documenturl_MailboxTrackingFolders</para>
        /// </summary>
        public List<Entity> GetMailboxAutoTrackingFolders_RegardingObjectId(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "mailboxtrackingfolder", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Regarding Object Id)</b></para>
        /// <para>Schema Name: bcgov_documenturl_MailboxTrackingFolders</para>
        /// </summary>
        public List<Entity> GetMailboxAutoTrackingFolders_RegardingObjectId(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "mailboxtrackingfolder", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Entity instance)</b></para>
        /// <para>Schema Name: bcgov_documenturl_PrincipalObjectAttributeAccesses</para>
        /// </summary>
        public List<Entity> GetFieldSharing_EntityInstance(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "principalobjectattributeaccess", "objectid", columns); }

        /// <summary>
        /// <para><b>Entity (Entity instance)</b></para>
        /// <para>Schema Name: bcgov_documenturl_PrincipalObjectAttributeAccesses</para>
        /// </summary>
        public List<Entity> GetFieldSharing_EntityInstance(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "principalobjectattributeaccess", "objectid", columns); }

        /// <summary>
        /// <para><b>Entity (Regarding)</b></para>
        /// <para>Schema Name: bcgov_documenturl_ProcessSession</para>
        /// </summary>
        public List<Entity> GetProcessSessions_Regarding(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "processsession", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Regarding)</b></para>
        /// <para>Schema Name: bcgov_documenturl_ProcessSession</para>
        /// </summary>
        public List<Entity> GetProcessSessions_Regarding(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "processsession", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Record)</b></para>
        /// <para>Schema Name: bcgov_documenturl_SyncErrors</para>
        /// </summary>
        public List<Entity> GetSyncErrors_Record(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "syncerror", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Record)</b></para>
        /// <para>Schema Name: bcgov_documenturl_SyncErrors</para>
        /// </summary>
        public List<Entity> GetSyncErrors_Record(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "syncerror", "regardingobjectid", columns); }

        /// <summary>
        /// <para><b>Entity (Document)</b></para>
        /// <para>Schema Name: dfp_documenturl_task_DocumentId</para>
        /// </summary>
        public List<Entity> GetBringForwards_Document(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "task", "dfp_documentid", columns); }

        /// <summary>
        /// <para><b>Entity (Document)</b></para>
        /// <para>Schema Name: dfp_documenturl_task_DocumentId</para>
        /// </summary>
        public List<Entity> GetBringForwards_Document(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "task", "dfp_documentid", columns); }

        /// <summary>
        /// <para><b>Entity (Object Id)</b></para>
        /// <para>Schema Name: bcgov_documenturl_UserEntityInstanceDatas</para>
        /// </summary>
        public List<Entity> GetUserEntityInstanceData_ObjectId(IOrganizationService service, params string[] columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "userentityinstancedata", "objectid", columns); }

        /// <summary>
        /// <para><b>Entity (Object Id)</b></para>
        /// <para>Schema Name: bcgov_documenturl_UserEntityInstanceDatas</para>
        /// </summary>
        public List<Entity> GetUserEntityInstanceData_ObjectId(IOrganizationService service, ColumnSet columns) { return BaseProxyClass.GetRelatedOneToManyEntities(service, this.Id, "userentityinstancedata", "objectid", columns); }


        
        
        
        public static class Properties
        {
            /// <summary>
            /// <para>Appointment</para>
            /// <para>Logical Name = bcgov_appointmentid</para>
            /// </summary>
            public const string Appointment = "bcgov_appointmentid";

            /// <summary>
            /// <para>Attachment No.</para>
            /// <para>Logical Name = dfp_attachmentnumber</para>
            /// </summary>
            public const string AttachmentNo = "dfp_attachmentnumber";

            /// <summary>
            /// <para>Batch Id</para>
            /// <para>Logical Name = dfp_batchid</para>
            /// </summary>
            public const string BatchId = "dfp_batchid";

            /// <summary>
            /// <para>BC Mail Status</para>
            /// <para>Logical Name = dfp_bcmailstatus</para>
            /// </summary>
            public const string BCMailStatus = "dfp_bcmailstatus";

            /// <summary>
            /// <para>bcgov_AppointmentIdName</para>
            /// <para>Logical Name = bcgov_appointmentidname</para>
            /// </summary>
            public const string bcgov_AppointmentIdName = "bcgov_appointmentidname";

            /// <summary>
            /// <para>bcgov_CaseIdName</para>
            /// <para>Logical Name = bcgov_caseidname</para>
            /// </summary>
            public const string bcgov_CaseIdName = "bcgov_caseidname";

            /// <summary>
            /// <para>bcgov_CustomerIdType</para>
            /// <para>Logical Name = bcgov_customeridtype</para>
            /// </summary>
            public const string bcgov_CustomerIdType = "bcgov_customeridtype";

            /// <summary>
            /// <para>bcgov_CustomerName</para>
            /// <para>Logical Name = bcgov_customername</para>
            /// </summary>
            public const string bcgov_CustomerName = "bcgov_customername";

            /// <summary>
            /// <para>bcgov_CustomerYomiName</para>
            /// <para>Logical Name = bcgov_customeryominame</para>
            /// </summary>
            public const string bcgov_CustomerYomiName = "bcgov_customeryominame";

            /// <summary>
            /// <para>bcgov_EmailIdName</para>
            /// <para>Logical Name = bcgov_emailidname</para>
            /// </summary>
            public const string bcgov_EmailIdName = "bcgov_emailidname";

            /// <summary>
            /// <para>bcgov_FaxIdName</para>
            /// <para>Logical Name = bcgov_faxidname</para>
            /// </summary>
            public const string bcgov_FaxIdName = "bcgov_faxidname";

            /// <summary>
            /// <para>bcgov_fileclassificationName</para>
            /// <para>Logical Name = bcgov_fileclassificationname</para>
            /// </summary>
            public const string bcgov_fileclassificationName = "bcgov_fileclassificationname";

            /// <summary>
            /// <para>bcgov_LetterIdName</para>
            /// <para>Logical Name = bcgov_letteridname</para>
            /// </summary>
            public const string bcgov_LetterIdName = "bcgov_letteridname";

            /// <summary>
            /// <para>bcgov_origincodeName</para>
            /// <para>Logical Name = bcgov_origincodename</para>
            /// </summary>
            public const string bcgov_origincodeName = "bcgov_origincodename";

            /// <summary>
            /// <para>bcgov_PhoneCallIdName</para>
            /// <para>Logical Name = bcgov_phonecallidname</para>
            /// </summary>
            public const string bcgov_PhoneCallIdName = "bcgov_phonecallidname";

            /// <summary>
            /// <para>bcgov_Tag1IdName</para>
            /// <para>Logical Name = bcgov_tag1idname</para>
            /// </summary>
            public const string bcgov_Tag1IdName = "bcgov_tag1idname";

            /// <summary>
            /// <para>bcgov_Tag2IdName</para>
            /// <para>Logical Name = bcgov_tag2idname</para>
            /// </summary>
            public const string bcgov_Tag2IdName = "bcgov_tag2idname";

            /// <summary>
            /// <para>bcgov_Tag3IdName</para>
            /// <para>Logical Name = bcgov_tag3idname</para>
            /// </summary>
            public const string bcgov_Tag3IdName = "bcgov_tag3idname";

            /// <summary>
            /// <para>bcgov_TaskIdName</para>
            /// <para>Logical Name = bcgov_taskidname</para>
            /// </summary>
            public const string bcgov_TaskIdName = "bcgov_taskidname";

            /// <summary>
            /// <para>Business Unit</para>
            /// <para>Logical Name = dfp_businessunitid</para>
            /// </summary>
            public const string BusinessUnit = "dfp_businessunitid";

            /// <summary>
            /// <para>Case</para>
            /// <para>Logical Name = bcgov_caseid</para>
            /// </summary>
            public const string Case = "bcgov_caseid";

            /// <summary>
            /// <para>Classification</para>
            /// <para>Logical Name = bcgov_fileclassification</para>
            /// </summary>
            public const string Classification = "bcgov_fileclassification";

            /// <summary>
            /// <para>Clinic Id</para>
            /// <para>Logical Name = dfp_clinicid</para>
            /// </summary>
            public const string ClinicId = "dfp_clinicid";

            /// <summary>
            /// <para>Compliance Date</para>
            /// <para>Logical Name = dfp_compliancedate</para>
            /// </summary>
            public const string ComplianceDate = "dfp_compliancedate";

            /// <summary>
            /// <para>Created By</para>
            /// <para>Logical Name = createdby</para>
            /// </summary>
            public const string CreatedBy = "createdby";

            /// <summary>
            /// <para>Created By (Delegate)</para>
            /// <para>Logical Name = createdonbehalfby</para>
            /// </summary>
            public const string CreatedBy_Delegate = "createdonbehalfby";

            /// <summary>
            /// <para>Created On</para>
            /// <para>Logical Name = createdon</para>
            /// </summary>
            public const string CreatedOn = "createdon";

            /// <summary>
            /// <para>CreatedByName</para>
            /// <para>Logical Name = createdbyname</para>
            /// </summary>
            public const string CreatedByName = "createdbyname";

            /// <summary>
            /// <para>CreatedByYomiName</para>
            /// <para>Logical Name = createdbyyominame</para>
            /// </summary>
            public const string CreatedByYomiName = "createdbyyominame";

            /// <summary>
            /// <para>CreatedOnBehalfByName</para>
            /// <para>Logical Name = createdonbehalfbyname</para>
            /// </summary>
            public const string CreatedOnBehalfByName = "createdonbehalfbyname";

            /// <summary>
            /// <para>CreatedOnBehalfByYomiName</para>
            /// <para>Logical Name = createdonbehalfbyyominame</para>
            /// </summary>
            public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";

            /// <summary>
            /// <para>Customer</para>
            /// <para>Logical Name = bcgov_customer</para>
            /// </summary>
            public const string Customer = "bcgov_customer";

            /// <summary>
            /// <para>Date Document Received</para>
            /// <para>Logical Name = dfp_datedocumentreceived</para>
            /// </summary>
            public const string DateDocumentReceived = "dfp_datedocumentreceived";

            /// <summary>
            /// <para>Days Past Due Date</para>
            /// <para>Logical Name = dfp_dayspastduedate</para>
            /// </summary>
            public const string DaysPastDueDate = "dfp_dayspastduedate";

            /// <summary>
            /// <para>Description</para>
            /// <para>Logical Name = dfp_description</para>
            /// </summary>
            public const string Description = "dfp_description";

            /// <summary>
            /// <para>Description for Team Lead Review</para>
            /// <para>Logical Name = dfp_descriptionforteamleadreview</para>
            /// </summary>
            public const string DescriptionForTeamLeadReview = "dfp_descriptionforteamleadreview";

            /// <summary>
            /// <para>dfp_bcmailstatusName</para>
            /// <para>Logical Name = dfp_bcmailstatusname</para>
            /// </summary>
            public const string dfp_bcmailstatusName = "dfp_bcmailstatusname";

            /// <summary>
            /// <para>dfp_BusinessUnitIDName</para>
            /// <para>Logical Name = dfp_businessunitidname</para>
            /// </summary>
            public const string dfp_BusinessUnitIDName = "dfp_businessunitidname";

            /// <summary>
            /// <para>dfp_ClinicIdName</para>
            /// <para>Logical Name = dfp_clinicidname</para>
            /// </summary>
            public const string dfp_ClinicIdName = "dfp_clinicidname";

            /// <summary>
            /// <para>dfp_ClinicIdYomiName</para>
            /// <para>Logical Name = dfp_clinicidyominame</para>
            /// </summary>
            public const string dfp_ClinicIdYomiName = "dfp_clinicidyominame";

            /// <summary>
            /// <para>dfp_dmerstatusName</para>
            /// <para>Logical Name = dfp_dmerstatusname</para>
            /// </summary>
            public const string dfp_dmerstatusName = "dfp_dmerstatusname";

            /// <summary>
            /// <para>dfp_dmertypeName</para>
            /// <para>Logical Name = dfp_dmertypename</para>
            /// </summary>
            public const string dfp_dmertypeName = "dfp_dmertypename";

            /// <summary>
            /// <para>dfp_DocumentChannelIDName</para>
            /// <para>Logical Name = dfp_documentchannelidname</para>
            /// </summary>
            public const string dfp_DocumentChannelIDName = "dfp_documentchannelidname";

            /// <summary>
            /// <para>dfp_documentoriginName</para>
            /// <para>Logical Name = dfp_documentoriginname</para>
            /// </summary>
            public const string dfp_documentoriginName = "dfp_documentoriginname";

            /// <summary>
            /// <para>dfp_DocumentSubTypeName</para>
            /// <para>Logical Name = dfp_documentsubtypename</para>
            /// </summary>
            public const string dfp_DocumentSubTypeName = "dfp_documentsubtypename";

            /// <summary>
            /// <para>dfp_DocumentTypeIDName</para>
            /// <para>Logical Name = dfp_documenttypeidname</para>
            /// </summary>
            public const string dfp_DocumentTypeIDName = "dfp_documenttypeidname";

            /// <summary>
            /// <para>dfp_DPSActionIDName</para>
            /// <para>Logical Name = dfp_dpsactionidname</para>
            /// </summary>
            public const string dfp_DPSActionIDName = "dfp_dpsactionidname";

            /// <summary>
            /// <para>dfp_dpspriorityName</para>
            /// <para>Logical Name = dfp_dpspriorityname</para>
            /// </summary>
            public const string dfp_dpspriorityName = "dfp_dpspriorityname";

            /// <summary>
            /// <para>dfp_dpsstatusName</para>
            /// <para>Logical Name = dfp_dpsstatusname</para>
            /// </summary>
            public const string dfp_dpsstatusName = "dfp_dpsstatusname";

            /// <summary>
            /// <para>dfp_DriverIdName</para>
            /// <para>Logical Name = dfp_driveridname</para>
            /// </summary>
            public const string dfp_DriverIdName = "dfp_driveridname";

            /// <summary>
            /// <para>dfp_expectedoriginName</para>
            /// <para>Logical Name = dfp_expectedoriginname</para>
            /// </summary>
            public const string dfp_expectedoriginName = "dfp_expectedoriginname";

            /// <summary>
            /// <para>dfp_IntakeAgentinDPSIDName</para>
            /// <para>Logical Name = dfp_intakeagentindpsidname</para>
            /// </summary>
            public const string dfp_IntakeAgentinDPSIDName = "dfp_intakeagentindpsidname";

            /// <summary>
            /// <para>dfp_IntakeAgentinDPSIDYomiName</para>
            /// <para>Logical Name = dfp_intakeagentindpsidyominame</para>
            /// </summary>
            public const string dfp_IntakeAgentinDPSIDYomiName = "dfp_intakeagentindpsidyominame";

            /// <summary>
            /// <para>dfp_isoldestdocumentName</para>
            /// <para>Logical Name = dfp_isoldestdocumentname</para>
            /// </summary>
            public const string dfp_isoldestdocumentName = "dfp_isoldestdocumentname";

            /// <summary>
            /// <para>dfp_isurgentName</para>
            /// <para>Logical Name = dfp_isurgentname</para>
            /// </summary>
            public const string dfp_isurgentName = "dfp_isurgentname";

            /// <summary>
            /// <para>dfp_LetterCreatedByName</para>
            /// <para>Logical Name = dfp_lettercreatedbyname</para>
            /// </summary>
            public const string dfp_LetterCreatedByName = "dfp_lettercreatedbyname";

            /// <summary>
            /// <para>dfp_LetterCreatedByYomiName</para>
            /// <para>Logical Name = dfp_lettercreatedbyyominame</para>
            /// </summary>
            public const string dfp_LetterCreatedByYomiName = "dfp_lettercreatedbyyominame";

            /// <summary>
            /// <para>dfp_LoginIdName</para>
            /// <para>Logical Name = dfp_loginidname</para>
            /// </summary>
            public const string dfp_LoginIdName = "dfp_loginidname";

            /// <summary>
            /// <para>dfp_mdportalstatusName</para>
            /// <para>Logical Name = dfp_mdportalstatusname</para>
            /// </summary>
            public const string dfp_mdportalstatusName = "dfp_mdportalstatusname";

            /// <summary>
            /// <para>dfp_MedicalPractitionerIdName</para>
            /// <para>Logical Name = dfp_medicalpractitioneridname</para>
            /// </summary>
            public const string dfp_MedicalPractitionerIdName = "dfp_medicalpractitioneridname";

            /// <summary>
            /// <para>dfp_outgoingletterName</para>
            /// <para>Logical Name = dfp_outgoinglettername</para>
            /// </summary>
            public const string dfp_outgoingletterName = "dfp_outgoinglettername";

            /// <summary>
            /// <para>dfp_ParentDocumentIdName</para>
            /// <para>Logical Name = dfp_parentdocumentidname</para>
            /// </summary>
            public const string dfp_ParentDocumentIdName = "dfp_parentdocumentidname";

            /// <summary>
            /// <para>dfp_PDFDocumentIdName</para>
            /// <para>Logical Name = dfp_pdfdocumentidname</para>
            /// </summary>
            public const string dfp_PDFDocumentIdName = "dfp_pdfdocumentidname";

            /// <summary>
            /// <para>dfp_priorityName</para>
            /// <para>Logical Name = dfp_priorityname</para>
            /// </summary>
            public const string dfp_priorityName = "dfp_priorityname";

            /// <summary>
            /// <para>dfp_PrivacyIDName</para>
            /// <para>Logical Name = dfp_privacyidname</para>
            /// </summary>
            public const string dfp_PrivacyIDName = "dfp_privacyidname";

            /// <summary>
            /// <para>dfp_ProcessorName</para>
            /// <para>Logical Name = dfp_processorname</para>
            /// </summary>
            public const string dfp_ProcessorName = "dfp_processorname";

            /// <summary>
            /// <para>dfp_ProcessorYomiName</para>
            /// <para>Logical Name = dfp_processoryominame</para>
            /// </summary>
            public const string dfp_ProcessorYomiName = "dfp_processoryominame";

            /// <summary>
            /// <para>dfp_queueName</para>
            /// <para>Logical Name = dfp_queuename</para>
            /// </summary>
            public const string dfp_queueName = "dfp_queuename";

            /// <summary>
            /// <para>dfp_sendforteamleadreviewName</para>
            /// <para>Logical Name = dfp_sendforteamleadreviewname</para>
            /// </summary>
            public const string dfp_sendforteamleadreviewName = "dfp_sendforteamleadreviewname";

            /// <summary>
            /// <para>dfp_showonportalsName</para>
            /// <para>Logical Name = dfp_showonportalsname</para>
            /// </summary>
            public const string dfp_showonportalsName = "dfp_showonportalsname";

            /// <summary>
            /// <para>dfp_solicitedName</para>
            /// <para>Logical Name = dfp_solicitedname</para>
            /// </summary>
            public const string dfp_solicitedName = "dfp_solicitedname";

            /// <summary>
            /// <para>dfp_submittalstatusName</para>
            /// <para>Logical Name = dfp_submittalstatusname</para>
            /// </summary>
            public const string dfp_submittalstatusName = "dfp_submittalstatusname";

            /// <summary>
            /// <para>dfp_tldepartmentName</para>
            /// <para>Logical Name = dfp_tldepartmentname</para>
            /// </summary>
            public const string dfp_tldepartmentName = "dfp_tldepartmentname";

            /// <summary>
            /// <para>dfp_UserUploadedName</para>
            /// <para>Logical Name = dfp_useruploadedname</para>
            /// </summary>
            public const string dfp_UserUploadedName = "dfp_useruploadedname";

            /// <summary>
            /// <para>dfp_UserUploadedYomiName</para>
            /// <para>Logical Name = dfp_useruploadedyominame</para>
            /// </summary>
            public const string dfp_UserUploadedYomiName = "dfp_useruploadedyominame";

            /// <summary>
            /// <para>dfp_XSStatusCodeIDName</para>
            /// <para>Logical Name = dfp_xsstatuscodeidname</para>
            /// </summary>
            public const string dfp_XSStatusCodeIDName = "dfp_xsstatuscodeidname";

            /// <summary>
            /// <para>DMER Status</para>
            /// <para>Logical Name = dfp_dmerstatus</para>
            /// </summary>
            public const string DMERStatus = "dfp_dmerstatus";

            /// <summary>
            /// <para>DMER Type</para>
            /// <para>Logical Name = dfp_dmertype</para>
            /// </summary>
            public const string DMERType = "dfp_dmertype";

            /// <summary>
            /// <para>Document Channel</para>
            /// <para>Logical Name = dfp_documentchannelid</para>
            /// </summary>
            public const string DocumentChannel = "dfp_documentchannelid";

            /// <summary>
            /// <para>Document Origin</para>
            /// <para>Logical Name = dfp_documentorigin</para>
            /// </summary>
            public const string DocumentOrigin = "dfp_documentorigin";

            /// <summary>
            /// <para>Document Pages</para>
            /// <para>Logical Name = dfp_documentpages</para>
            /// </summary>
            public const string DocumentPages = "dfp_documentpages";

            /// <summary>
            /// <para>Document Status</para>
            /// <para>Logical Name = dfp_submittalstatus</para>
            /// </summary>
            public const string DocumentStatus = "dfp_submittalstatus";

            /// <summary>
            /// <para>Document Sub-Type</para>
            /// <para>Logical Name = dfp_documentsubtype</para>
            /// </summary>
            public const string DocumentSubType = "dfp_documentsubtype";

            /// <summary>
            /// <para>Document Type</para>
            /// <para>Logical Name = dfp_documenttypeid</para>
            /// </summary>
            public const string DocumentType = "dfp_documenttypeid";

            /// <summary>
            /// <para>Document Url</para>
            /// <para>Logical Name = bcgov_documenturlid</para>
            /// </summary>
            public const string DocumentUrlId = "bcgov_documenturlid";

            /// <summary>
            /// <para>DPS Action</para>
            /// <para>Logical Name = dfp_dpsactionid</para>
            /// </summary>
            public const string DPSAction = "dfp_dpsactionid";

            /// <summary>
            /// <para>DPS Class</para>
            /// <para>Logical Name = dfp_dpsclass</para>
            /// </summary>
            public const string DPSClass = "dfp_dpsclass";

            /// <summary>
            /// <para>DPS Priority</para>
            /// <para>Logical Name = dfp_dpspriority</para>
            /// </summary>
            public const string DPSPriority = "dfp_dpspriority";

            /// <summary>
            /// <para>DPS Processing Date</para>
            /// <para>Logical Name = dfp_dpsprocessingdate</para>
            /// </summary>
            public const string DPSProcessingDate = "dfp_dpsprocessingdate";

            /// <summary>
            /// <para>DPS Status</para>
            /// <para>Logical Name = dfp_dpsstatus</para>
            /// </summary>
            public const string DPSStatus = "dfp_dpsstatus";

            /// <summary>
            /// <para>DPSed Date</para>
            /// <para>Logical Name = dfp_processdate</para>
            /// </summary>
            public const string DPSedDate = "dfp_processdate";

            /// <summary>
            /// <para>Driver</para>
            /// <para>Logical Name = dfp_driverid</para>
            /// </summary>
            public const string Driver = "dfp_driverid";

            /// <summary>
            /// <para>Due Date</para>
            /// <para>Logical Name = dfp_duedate</para>
            /// </summary>
            public const string DueDate = "dfp_duedate";

            /// <summary>
            /// <para>Email</para>
            /// <para>Logical Name = bcgov_emailid</para>
            /// </summary>
            public const string Email = "bcgov_emailid";

            /// <summary>
            /// <para>Expected Origin</para>
            /// <para>Logical Name = dfp_expectedorigin</para>
            /// </summary>
            public const string ExpectedOrigin = "dfp_expectedorigin";

            /// <summary>
            /// <para>Extension</para>
            /// <para>Logical Name = bcgov_fileextension</para>
            /// </summary>
            public const string Extension = "bcgov_fileextension";

            /// <summary>
            /// <para>Extension Days</para>
            /// <para>Logical Name = dfp_extensiondays</para>
            /// </summary>
            public const string ExtensionDays = "dfp_extensiondays";

            /// <summary>
            /// <para>Extension Requested On</para>
            /// <para>Logical Name = dfp_extensionrequestedon</para>
            /// </summary>
            public const string ExtensionRequestedOn = "dfp_extensionrequestedon";

            /// <summary>
            /// <para>Fax</para>
            /// <para>Logical Name = bcgov_faxid</para>
            /// </summary>
            public const string Fax = "bcgov_faxid";

            /// <summary>
            /// <para>Fax Number</para>
            /// <para>Logical Name = dfp_faxnumber</para>
            /// </summary>
            public const string FaxNumber = "dfp_faxnumber";

            /// <summary>
            /// <para>Fax Sender</para>
            /// <para>Logical Name = dfp_faxsender</para>
            /// </summary>
            public const string FaxSender = "dfp_faxsender";

            /// <summary>
            /// <para>Fax Time Stamp</para>
            /// <para>Logical Name = dfp_faxtimestamp</para>
            /// </summary>
            public const string FaxTimeStamp = "dfp_faxtimestamp";

            /// <summary>
            /// <para>File Name</para>
            /// <para>Logical Name = bcgov_filename</para>
            /// </summary>
            public const string FileName = "bcgov_filename";

            /// <summary>
            /// <para>Import Id</para>
            /// <para>Logical Name = dfp_importid</para>
            /// </summary>
            public const string ImportId = "dfp_importid";

            /// <summary>
            /// <para>Import Sequence Number</para>
            /// <para>Logical Name = importsequencenumber</para>
            /// </summary>
            public const string ImportSequenceNumber = "importsequencenumber";

            /// <summary>
            /// <para>Intake Agent in DPS</para>
            /// <para>Logical Name = dfp_intakeagentindpsid</para>
            /// </summary>
            public const string IntakeAgentInDPS = "dfp_intakeagentindpsid";

            /// <summary>
            /// <para>Is Oldest Document</para>
            /// <para>Logical Name = dfp_isoldestdocument</para>
            /// </summary>
            public const string IsOldestDocument = "dfp_isoldestdocument";

            /// <summary>
            /// <para>Issue Date</para>
            /// <para>Logical Name = dfp_issuedate</para>
            /// </summary>
            public const string IssueDate = "dfp_issuedate";

            /// <summary>
            /// <para>Letter</para>
            /// <para>Logical Name = bcgov_letterid</para>
            /// </summary>
            public const string Letter = "bcgov_letterid";

            /// <summary>
            /// <para>Letter Created By</para>
            /// <para>Logical Name = dfp_lettercreatedby</para>
            /// </summary>
            public const string LetterCreatedBy = "dfp_lettercreatedby";

            /// <summary>
            /// <para>Letter Sent Date</para>
            /// <para>Logical Name = dfp_lettersentdate</para>
            /// </summary>
            public const string LetterSentDate = "dfp_lettersentdate";

            /// <summary>
            /// <para>Login</para>
            /// <para>Logical Name = dfp_loginid</para>
            /// </summary>
            public const string Login = "dfp_loginid";

            /// <summary>
            /// <para>MD Portal Status</para>
            /// <para>Logical Name = dfp_mdportalstatus</para>
            /// </summary>
            public const string MDPortalStatus = "dfp_mdportalstatus";

            /// <summary>
            /// <para>Medical Practitioner</para>
            /// <para>Logical Name = dfp_medicalpractitionerid</para>
            /// </summary>
            public const string MedicalPractitioner = "dfp_medicalpractitionerid";

            /// <summary>
            /// <para>Modified By</para>
            /// <para>Logical Name = modifiedby</para>
            /// </summary>
            public const string ModifiedBy = "modifiedby";

            /// <summary>
            /// <para>Modified By (Delegate)</para>
            /// <para>Logical Name = modifiedonbehalfby</para>
            /// </summary>
            public const string ModifiedBy_Delegate = "modifiedonbehalfby";

            /// <summary>
            /// <para>Modified On</para>
            /// <para>Logical Name = modifiedon</para>
            /// </summary>
            public const string ModifiedOn = "modifiedon";

            /// <summary>
            /// <para>ModifiedByName</para>
            /// <para>Logical Name = modifiedbyname</para>
            /// </summary>
            public const string ModifiedByName = "modifiedbyname";

            /// <summary>
            /// <para>ModifiedByYomiName</para>
            /// <para>Logical Name = modifiedbyyominame</para>
            /// </summary>
            public const string ModifiedByYomiName = "modifiedbyyominame";

            /// <summary>
            /// <para>ModifiedOnBehalfByName</para>
            /// <para>Logical Name = modifiedonbehalfbyname</para>
            /// </summary>
            public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";

            /// <summary>
            /// <para>ModifiedOnBehalfByYomiName</para>
            /// <para>Logical Name = modifiedonbehalfbyyominame</para>
            /// </summary>
            public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";

            /// <summary>
            /// <para>Oracle User Id</para>
            /// <para>Logical Name = dfp_oracleuserid</para>
            /// </summary>
            public const string OracleUserId = "dfp_oracleuserid";

            /// <summary>
            /// <para>Origin</para>
            /// <para>Logical Name = bcgov_origincode</para>
            /// </summary>
            public const string Origin = "bcgov_origincode";

            /// <summary>
            /// <para>Outgoing Letter</para>
            /// <para>Logical Name = dfp_outgoingletter</para>
            /// </summary>
            public const string OutgoingLetter = "dfp_outgoingletter";

            /// <summary>
            /// <para>Owner</para>
            /// <para>Logical Name = ownerid</para>
            /// </summary>
            public const string Owner = "ownerid";

            /// <summary>
            /// <para>OwnerIdName</para>
            /// <para>Logical Name = owneridname</para>
            /// </summary>
            public const string OwnerIdName = "owneridname";

            /// <summary>
            /// <para>OwnerIdType</para>
            /// <para>Logical Name = owneridtype</para>
            /// </summary>
            public const string OwnerIdType = "owneridtype";

            /// <summary>
            /// <para>OwnerIdYomiName</para>
            /// <para>Logical Name = owneridyominame</para>
            /// </summary>
            public const string OwnerIdYomiName = "owneridyominame";

            /// <summary>
            /// <para>Owning Business Unit</para>
            /// <para>Logical Name = owningbusinessunit</para>
            /// </summary>
            public const string OwningBusinessUnit = "owningbusinessunit";

            /// <summary>
            /// <para>Owning Team</para>
            /// <para>Logical Name = owningteam</para>
            /// </summary>
            public const string OwningTeam = "owningteam";

            /// <summary>
            /// <para>Owning User</para>
            /// <para>Logical Name = owninguser</para>
            /// </summary>
            public const string OwningUser = "owninguser";

            /// <summary>
            /// <para>Parent Document</para>
            /// <para>Logical Name = dfp_parentdocumentid</para>
            /// </summary>
            public const string ParentDocument = "dfp_parentdocumentid";

            /// <summary>
            /// <para>PDF Document</para>
            /// <para>Logical Name = dfp_pdfdocumentid</para>
            /// </summary>
            public const string PDFDocument = "dfp_pdfdocumentid";

            /// <summary>
            /// <para>Phone Call</para>
            /// <para>Logical Name = bcgov_phonecallid</para>
            /// </summary>
            public const string PhoneCall = "bcgov_phonecallid";

            /// <summary>
            /// <para>Priority</para>
            /// <para>Logical Name = dfp_priority</para>
            /// </summary>
            public const string Priority = "dfp_priority";

            /// <summary>
            /// <para>Privacy</para>
            /// <para>Logical Name = dfp_privacyid</para>
            /// </summary>
            public const string Privacy = "dfp_privacyid";

            /// <summary>
            /// <para>Processor</para>
            /// <para>Logical Name = dfp_processor</para>
            /// </summary>
            public const string Processor = "dfp_processor";

            /// <summary>
            /// <para>Queue</para>
            /// <para>Logical Name = dfp_queue</para>
            /// </summary>
            public const string Queue = "dfp_queue";

            /// <summary>
            /// <para>Received Date</para>
            /// <para>Logical Name = bcgov_receiveddate</para>
            /// </summary>
            public const string ReceivedDate = "bcgov_receiveddate";

            /// <summary>
            /// <para>Record Created On</para>
            /// <para>Logical Name = overriddencreatedon</para>
            /// </summary>
            public const string RecordCreatedOn = "overriddencreatedon";

            /// <summary>
            /// <para>Send for Team Lead Review</para>
            /// <para>Logical Name = dfp_sendforteamleadreview</para>
            /// </summary>
            public const string SendForTeamLeadReview = "dfp_sendforteamleadreview";

            /// <summary>
            /// <para>Show on Portals</para>
            /// <para>Logical Name = dfp_showonportals</para>
            /// </summary>
            public const string ShowOnPortals = "dfp_showonportals";

            /// <summary>
            /// <para>Size</para>
            /// <para>Logical Name = bcgov_filesize</para>
            /// </summary>
            public const string Size = "bcgov_filesize";

            /// <summary>
            /// <para>Solicited</para>
            /// <para>Logical Name = dfp_solicited</para>
            /// </summary>
            public const string Solicited = "dfp_solicited";

            /// <summary>
            /// <para>Solicited Reason</para>
            /// <para>Logical Name = dfp_solicitedreason</para>
            /// </summary>
            public const string SolicitedReason = "dfp_solicitedreason";

            /// <summary>
            /// <para>statecodeName</para>
            /// <para>Logical Name = statecodename</para>
            /// </summary>
            public const string statecodeName = "statecodename";

            /// <summary>
            /// <para>Status</para>
            /// <para>Logical Name = statecode</para>
            /// </summary>
            public const string Status = "statecode";

            /// <summary>
            /// <para>Status Reason</para>
            /// <para>Logical Name = statuscode</para>
            /// </summary>
            public const string StatusReason = "statuscode";

            /// <summary>
            /// <para>statuscodeName</para>
            /// <para>Logical Name = statuscodename</para>
            /// </summary>
            public const string statuscodeName = "statuscodename";

            /// <summary>
            /// <para>Tag 1</para>
            /// <para>Logical Name = bcgov_tag1id</para>
            /// </summary>
            public const string Tag1 = "bcgov_tag1id";

            /// <summary>
            /// <para>Tag 2</para>
            /// <para>Logical Name = bcgov_tag2id</para>
            /// </summary>
            public const string Tag2 = "bcgov_tag2id";

            /// <summary>
            /// <para>Tag 3</para>
            /// <para>Logical Name = bcgov_tag3id</para>
            /// </summary>
            public const string Tag3 = "bcgov_tag3id";

            /// <summary>
            /// <para>Task</para>
            /// <para>Logical Name = bcgov_taskid</para>
            /// </summary>
            public const string Task = "bcgov_taskid";

            /// <summary>
            /// <para>Time Zone Rule Version Number</para>
            /// <para>Logical Name = timezoneruleversionnumber</para>
            /// </summary>
            public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";

            /// <summary>
            /// <para>TL Department</para>
            /// <para>Logical Name = dfp_tldepartment</para>
            /// </summary>
            public const string TLDepartment = "dfp_tldepartment";

            /// <summary>
            /// <para>Upload Date</para>
            /// <para>Logical Name = dfp_faxreceiveddate</para>
            /// </summary>
            public const string UploadDate = "dfp_faxreceiveddate";

            /// <summary>
            /// <para>Uploaded Date (Old)</para>
            /// <para>Logical Name = dfp_uploadeddate</para>
            /// </summary>
            public const string UploadedDate_Old = "dfp_uploadeddate";

            /// <summary>
            /// <para>Urgent Request</para>
            /// <para>Logical Name = dfp_isurgent</para>
            /// </summary>
            public const string UrgentRequest = "dfp_isurgent";

            /// <summary>
            /// <para>Url</para>
            /// <para>Logical Name = bcgov_url</para>
            /// </summary>
            public const string Url = "bcgov_url";

            /// <summary>
            /// <para>User Uploaded</para>
            /// <para>Logical Name = dfp_useruploaded</para>
            /// </summary>
            public const string UserUploaded = "dfp_useruploaded";

            /// <summary>
            /// <para>UTC Conversion Time Zone Code</para>
            /// <para>Logical Name = utcconversiontimezonecode</para>
            /// </summary>
            public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";

            /// <summary>
            /// <para>Validation Method</para>
            /// <para>Logical Name = dfp_validationmethod</para>
            /// </summary>
            public const string ValidationMethod = "dfp_validationmethod";

            /// <summary>
            /// <para>Validation Previous</para>
            /// <para>Logical Name = dfp_validationprevious</para>
            /// </summary>
            public const string ValidationPrevious = "dfp_validationprevious";

            /// <summary>
            /// <para>Version Number</para>
            /// <para>Logical Name = versionnumber</para>
            /// </summary>
            public const string VersionNumber = "versionnumber";

            /// <summary>
            /// <para>XS Status Code</para>
            /// <para>Logical Name = dfp_xsstatuscodeid</para>
            /// </summary>
            public const string XSStatusCode = "dfp_xsstatuscodeid";

        }

    }
}
